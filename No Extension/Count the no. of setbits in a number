#include<iostream>
using namespace std;
// Counting  the number of setbits using AND opreator(&) and Bitshift(>>)
int countsetbits(int n)
{
	int ans; 
	while(n!=0){
	ans+=(n&1);
	n=n>>1;//using right shift 
}
	return ans;
}
// More faster approach
int countsetbitsfaster (int n)
{
	int a;
	while(n>0)
	{
		n=n&(n-1);//removes the set bit from right to left
		a++;
	}

return a;
}
int main()
{
	int n = 13;
 
	cout<<countsetbits(n);
	cout<<countsetbitsfaster(n);
	cout<<__builtin_popcount(n);//predefined function__builtin_popcount(a)
	
	}
	//using this program we can determine the no. of the ones or setbits in the binary representation of a decimal number.
  
  Output:
  3
