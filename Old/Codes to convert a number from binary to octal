//Python

import math
def binary_to_octal(binary):
octal = 0
decimal = 0
i = 0

while(binary != 0):
decimal += (binary%10) * math.pow(2,i);
i = i + 1
binary = int(binary/10)

i = 1

while (decimal != 0):
octal += (decimal % 8) * i;
decimal = int(decimal/8)
i *= 10;

return octal;

return decimal;

binary = int(input(“Enter the binary number : “))
print(“Equivalent decimal number : “,int(binary_to_octal(binary)))

//C

#include <stdio.h>
#include <math.h>

int binary_to_octal(long int binary)
{
int octal = 0, decimal = 0, i = 0;

while(binary != 0)
{
decimal += (binary%10) * pow(2,i);
++i;
binary/=10;
}

i = 1;

while (decimal != 0)
{
octal += (decimal % 8) * i;
decimal /= 8;
i *= 10;
}

return octal;
}

int main()
{
long int binary;

printf(“\nEnter a binary number: “);
scanf(“%lld”, &binary);

printf(“\nOctal Equivalent : %d\n”, binary_to_octal(binary));

return 0;
}

//C++

#include <iostream>
#include <math.h>
using namespace std;

int binary_to_octal(long int binary)
{
int octal = 0, decimal = 0, i = 0;

while(binary != 0)
{
decimal += (binary%10) * pow(2,i);
++i;
binary/=10;
}

i = 1;

while (decimal != 0)
{
octal += (decimal % 8) * i;
decimal /= 8;
i *= 10;
}

return octal;
}

int main()
{
long int binary;

cout << “\nEnter a binary number: “;
cin >> binary;

cout << “\nOctal Equivalent : ” << binary_to_octal(binary) << endl;

return 0;
}

//Java

import java.util.*;
public class Main
{
public static int binary_to_octal( int binary)
{
int octal = 0, decimal = 0, i = 0;

while(binary != 0)
{
decimal += (binary%10) * Math.pow(2,i);
++i;
binary/=10;
}

i = 1;

while (decimal != 0)
{
octal += (decimal % 8) * i;
decimal /= 8;
i *= 10;
}

return octal;
}

public static void main(String[] args)
{
Scanner sc = new Scanner(System.in);
System.out.print(“Enter the binary number : “);
int binary = sc.nextInt();
System.out.print(“\nEquivalent octal number : ” + binary_to_octal(binary));
}
}
