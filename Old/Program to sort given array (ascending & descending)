
#include<iostream>
using namespace std;
void merge(int *a,int *x,int *y,int s,int e)
{
    int i=s;
    int k=s;
    int mid=(s+e)/2;
    int j=mid+1;
    while(i<=mid && j<=e)
    {
        if(x[i]>=y[j])
        {
            a[k]=y[j];
            j++;
            k++;
        }
        else
        {
            a[k]=x[i];
            k++;
            i++;
        }
    }
    while(i<=mid)
    {
        a[k]=x[i];
        i++;
        k++;
    }
    while(j<=e)
    {
        a[k]=y[j];
        j++;
        k++;
    }

}
void sort1(int  *a,int s,int e)
{
    if(s==e)
    {
        return;
    }
    int x[100],y[100];
    int mid=(s+e)/2;
    for(int i=s;i<=mid;i++)
    {
        x[i]=a[i];
    }
    for(int i=mid+1;i<=e;i++)
    {
        y[i]=a[i];
    }
    sort1(x,s,mid);
    sort1(y,mid+1,e);
    merge(a,x,y,s,e);

}
int main()
{
    int a[100],n;
    cout<<"Enter length of array"<<endl;

    cin>>n;
    cout<<"Enter elements"<<endl;
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
    }
    sort1(a,0,n-1);
    for(int i=0;i<n;i++)
    {
        cout<<a[i]<<" ";
    }
=======
#include <stdio.h>              
#include<conio.h>


int main()                        
{
	int a[100],n,i,j;
	printf("Array size: ");
        scanf("%d",&n);
        printf("Elements: ");
        
      for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
	for (int i = 0; i < n; i++)                     
	{
		for (int j = 0; j < n; j++)             
		{
			if (a[j] > a[i])                
			{
				int tmp = a[i];         
				a[i] = a[j];            
				a[j] = tmp;             
			}  
		}
	}
	printf("\n\nAscending : ");                    
	for (int i = 0; i < n; i++)                     
	{
		printf(" %d ", a[i]);
	}
	for (int i = 0; i < n; i++)                     
	{
		for (int j = 0; j < n; j++)             
		{
			if (a[j] < a[i])                
			{
				int tmp = a[i];         
				a[i] = a[j];           
				a[j] = tmp;            
			}
		}
	}
	printf("\n\nDescending : ");                    
	for (int i = 0; i < n; i++)                     
	{
		printf(" %d ", a[i]);                   
	}

	return 0;          
getch();
}
