#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

class cqueue{
private:
	int front,rear,cnt;
	int arr[5];
public:
	cqueue(){
		cnt=0;
		front =-1;
		rear=-1;
		for(int i=0;i<5;i++)
			arr[i]=0;
	}	
		
		
bool isEmpty(){
	
	if(front==-1 && rear==-1)
		return true;
	else
		return false;
}

bool isFull(){
	
	if((rear+1)%5==front)
		return true;
	else 
		return false;
}

void enqueue(int val){
	
	if(isFull())
		cout<<"queue full";
	else if(isEmpty()){
	
		front =rear=0;
		arr[rear]=val;
	}
	else{
		rear = (rear+1)%5;
	    arr[rear]=val;	
	    
	}
	cnt++;	
}

int dequeue(){
	
	int x;
	if(isEmpty()){
		cout<<"queue empty"<<endl;
		return 0;
	}
		
	else if(front ==rear)
	{
		x=arr[front];
		arr[front]=0;
		front=rear=-1;
		cnt--;
		
	}
	
	else{
		x = arr[front];
		arr[front]=0;
		front=(front+1)%5;
		cnt--;
	}
	return x;
}

int coun(){
	return cnt;
}

void display(){
	
	for(int i=0;i<5;i++)
		cout<<arr[i]<<" ";
}

};



int main(){
	cqueue q1;
	int option,value;
	
	cout<<"MENU"<<endl;
	
	do{
		
		cout<<"select option, enter 0 to exit"<<endl;
		cout<<"1. enqueue"<<endl;
		cout<<"2. dequeue"<<endl;
		cout<<"3. isEmpty"<<endl;
		cout<<"4. isFull"<<endl;
		cout<<"5. count"<<endl;
		cout<<"6. display"<<endl;
		cout<<"7. clear screen"<<endl<<endl;
		
		cin>>option;
		switch(option){
			case 0:
				break;
			case 1:
				cout<<"enqueue operation"<<endl;
				cin>>value;
				q1.enqueue(value);
				break;
			case 2:
				cout<<"dequeue operation:"<<q1.dequeue()<<endl;
		
				break;
			case 3:
				if(q1.isEmpty())
					cout<<"queue empty"<<endl;
				else
					cout<<"queue not empty"<<endl;
				break;
			case 4:
				if(q1.isFull())
					cout<<"queue full"<<endl;
				else
					cout<<"queue not full"<<endl;
				break;
			case 5:
				cout<<"count of item is:"<<q1.coun()<<endl;
				break;
			case 6:
				cout<<"display function"<<endl;
				q1.display();
				break;
			case 7:
				system("cls");
				break;
			default:
			cout<<"wrong option";	
	
		}
}while(option!=0);

return 0;
}
