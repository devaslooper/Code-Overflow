/* Dynamic Programming - Maximum Product Cutting 
Time Complexity O(n^2)
Space Complexity O(n) */

#include<bits/stdc++.h>
using namespace std;

// function to calculate maximum product
int maxProduct(int n){
    
    int dp[n+1];
    dp[0]=dp[1]=0;
    
    for(int i=1;i<=n;i++){
        
        int maxValue=0;
            
            for(int j=1;j<=i/2;j++){
                
                maxValue=max(maxValue,max((i-j)*j,dp[i-j]*j));
            }
        dp[i]=maxValue;
    }
    return dp[n];
}
//main function
int main() {
	
	int t;cin>>t;
	while(t--){
	    int n;cin>>n;
	    cout<<maxProduct(n)<<endl;
	}
	return 0;
}
